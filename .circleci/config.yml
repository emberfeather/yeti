version: 2
jobs:
  build:
    working_directory: ~/grow
    docker:
    - image: grow/base:py3
    steps:
    - checkout

    - restore_cache:
        keys:
        - &cache-key grow-cache-{{ .Branch }}-{{ checksum "package.json" }}

    - run:
        name: Grow Intall
        command: grow install

    - save_cache:
        key: *cache-key
        paths:
          - extensions
          - node_modules

    - run:
        name: Test Build
        command: grow build

    - persist_to_workspace:
        root: ~/grow
        paths:
        - build
        - .gcloudignore
        - .percy.yml
        - app.yaml
        - go.mod
        - main.go

  build_deploy:
    working_directory: ~/grow
    docker:
    - image: grow/base:py3
    steps:
    - checkout

    - restore_cache:
        keys:
        - &cache-key grow-cache-{{ .Branch }}-{{ checksum "package.json" }}

    - run:
        name: Grow Intall
        command: grow install

    - save_cache:
        key: *cache-key
        paths:
          - extensions
          - node_modules

    - run:
        name: Prod Build
        command: grow deploy prod -f

    - persist_to_workspace:
        root: ~/grow
        paths:
        - build
        - .gcloudignore
        - .percy.yml
        - app.yaml
        - go.mod
        - main.go

  deploy:
    working_directory: ~/grow
    docker:
    - image: google/cloud-sdk
    steps:
    - attach_workspace:
        at: ~/grow
    - run:
        name: GCloud Client Setup
        command: |
          echo $GCLOUD_SERVICE_KEY | base64 --decode > ~/client-secret.json
          gcloud auth activate-service-account --key-file ~/client-secret.json
    - run:
        name: Deploy to GAE
        command: gcloud app deploy -q --project=ball-of-snow --verbosity=error app.yaml

  snapshot:
    working_directory: ~/grow
    docker:
    - image: circleci/node:lts-browsers
    steps:
    - attach_workspace:
        at: ~/grow
    - run:
        name: Percy Snapshots
        command: npx percy snapshot build/

workflows:
  version: 2

  monthly:
    triggers:
    - schedule:
        cron: "0 0 1 * *"
        filters:
          branches:
            only:
            - master
    jobs:
    - build
    - snapshot:
        requires:
        - build

  test:
    jobs:
    - build
    - snapshot:
        requires:
        - build
    - build_deploy:
        filters:
          branches:
            only: master
    - deploy:
        requires:
        - build_deploy
        filters:
          branches:
            only: master
